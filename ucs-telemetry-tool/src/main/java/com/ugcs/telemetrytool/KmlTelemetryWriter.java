package com.ugcs.telemetrytool;

import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.ugcs.common.util.Preconditions;

public class KmlTelemetryWriter implements TelemetryWriter {
	@Override
	public void write(OutputStream out, FlightTelemetry telemetry, List<TelemetryKey> emptyFields) throws IOException {
		Preconditions.checkNotNull(out);
		Preconditions.checkNotNull(telemetry);

		Iterator<TelemetryPoint> pointIterator =
				new TelemetryPointIterator(telemetry.getRecords());
		List<TelemetryPoint> coordinateList = new ArrayList<>();

		while (pointIterator.hasNext()) {
			TelemetryPoint point = pointIterator.next();
			coordinateList.add(point);
		}

		StringBuilder stringBuilder = new StringBuilder(
				"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n"
						+ "<kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\" "
						+ "xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:xal=\"urn:oasis:names:tc:ciq:xsdschema:xAL:2.0\">\n"
						+ "    <Document>\n"
						+ "        <name>Untitled route</name>\n"
						+ "        <visibility>1</visibility>\n"
						+ "        <description>This route was generated by the &lt;a href=&quot;http://www.ugcs.com&quot;/&gt;UgCS&lt;/a&gt;</description>\n"
						+ "        <Style id=\"plineStyle\">\n"
						+ "            <LineStyle>\n"
						+ "                <color>7F00FFFF</color>\n"
						+ "                <width>4.0</width>\n"
						+ "            </LineStyle>\n"
						+ "            <PolyStyle>\n"
						+ "                <color>7F00FF00</color>\n"
						+ "            </PolyStyle>\n"
						+ "        </Style>\n"
						+ "        <Placemark>\n"
						+ "            <styleUrl>plineStyle</styleUrl>\n"
						+ "            <LineString>\n"
						+ "                <extrude>1</extrude>\n"
						+ "                <tessellate>1</tessellate>\n"
						+ "                <altitudeMode>absolute</altitudeMode>\n"
						+ "                <coordinates>");
		stringBuilder.append(formatCoordinates(coordinateList));
		stringBuilder.append("</coordinates>\n"
				+ "            </LineString>\n"
				+ "        </Placemark>\n"
				+ "    </Document>\n"
				+ "</kml>");

		out.write(stringBuilder.toString().getBytes());
	}

	private StringBuilder formatCoordinates(List<TelemetryPoint> coordinates) {
		StringBuilder stringBuilder = new StringBuilder();
		for (int i = 0; i < coordinates.size(); ++i) {
			stringBuilder.append(coordinates.get(i).getLongitude()).append(",")
					.append(coordinates.get(i).getLatitude()).append(",")
					.append(coordinates.get(i).getAltitudeAmsl());
			if (i < coordinates.size() - 1)
				stringBuilder.append(' ');
		}
		return stringBuilder;
	}
}